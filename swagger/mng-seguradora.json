{
  "openapi": "3.0.0",
  "info": {
    "title": "API.Seguradora",
    "version": "1.0",
    "description": "Serviços de Negócios expostos através de RESTful services, para integrações com parceiros e agilidade no desenvolvimento interno de softwares da companhia."
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/documento": {
      "parameters": [
        {
          "name": "client_id",
          "in": "header",
          "description": "Código do App do Cliente.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Obtém um array de documento contendo os documentos registrados no GED da Mongeral, de acordo com o índice informado.",
        "parameters": [
          {
            "name": "cnpj",
            "in": "query",
            "required": true,
            "description": "CNPJ do parceiro.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indiceDocumento.valor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indiceDocumento.tipoIndice",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_IQueryable_Documento_"
                }
              }
            }
          },
          "400": {
            "description": "Solicitação inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "405": {
            "description": "Parâmetro(s) não enviado(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageError"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Documento"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "type": "boolean"
                    },
                    "Mensagens": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Documento não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/documento/{id}": {
      "get": {
        "description": "Retornar documento específico pelo id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do documento.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Código do App do Cliente.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "$ref": "#/components/schemas/Documento"
                    },
                    "Mensagens": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Documento não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado."
          }
        }
      }
    },
    "/dominio/{id}": {
      "get": {
        "operationId": "api-version-dominio-id-get",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Dominio"
                      }
                    },
                    "Mensagens": {
                      "type": "string"
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitação inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/hierarquia/{id}": {
      "get": {
        "description": "Recupera um produtor específico pelo id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificação (CPF/CNPJ).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Código do App do Cliente.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_Produtor_"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Produtor não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/hierarquia/{documento}/parceiro": {
      "get": {
        "description": "Recupera uma hierarquia e a lista de parceiros de um produtor específico pelo documento.",
        "operationId": "5b5a07c655e38e776e1e8d43",
        "parameters": [
          {
            "name": "documento",
            "in": "path",
            "required": true,
            "description": "Identificação (CPF/CNPJ).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_Produtor_"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/modeloproposta": {
      "get": {
        "description": "Recupera as instâncias de \"ModeloProposta\" disponíveis para a empresa informada.",
        "parameters": [
          {
            "name": "cnpj",
            "in": "query",
            "required": true,
            "description": "CNPJ da empresa.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "completo",
            "in": "query",
            "required": true,
            "description": "Indica se deve retornar a versão completa ou reduzida.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "canalVenda",
            "in": "query",
            "required": true,
            "description": "Canal de venda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json:": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModeloProposta"
                      }
                    },
                    "Mensagens": {
                      "type": "string"
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Empresa não encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro Desconhecido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/modeloproposta/{id}": {
      "get": {
        "description": "Recupera a instância de \"ModeloProposta\" disponível para a empresa informada.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Código do modelo de proposta.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "required": true,
            "description": "CNPJ da empresa.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "completo",
            "in": "query",
            "description": "Indica se deve retornar a versão completa ou reduzida.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json:": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "$ref": "#/components/schemas/ModeloProposta"
                    },
                    "Mensagens": {
                      "type": "string"
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Empresa não encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Parâmetro(s) não informado(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageError"
                }
              }
            }
          },
          "500": {
            "description": "Erro Desconhecido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/ModeloPropostaEmpresarialGlobal": {
      "get": {
        "description": "Retorna os dados de modelos empresariais globais.",
        "parameters": [
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pesquisa.cnpjParceiro",
            "in": "query",
            "description": "CNPJ do parceiro.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pesquisa.codigoModeloProposta",
            "in": "query",
            "description": "Código do modelo da proposta.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModeloPropostaEmpresarialGlobal"
                }
              }
            }
          },
          "400": {
            "description": "Solicitação inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado."
          },
          "404": {
            "description": "Recurso não encontrado."
          },
          "500": {
            "description": "Erro Desconhecido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pendencia": {
      "get": {
        "description": "Retorna as pendências abertas para o usuário selecionado. Opcional informar o número da proposta, para receber apenas as pendências da proposta informada.",
        "operationId": "5a25a0ee2b19850c2869b6df",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numeroProposta",
            "in": "query",
            "description": "Número da Proposta que se deseja verificar as pendências.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "description": "CNPJ do parceiro.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Código do App do Cliente.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_IQueryable_Pendencia_"
                }
              }
            }
          },
          "400": {
            "description": "Solicitação inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "405": {
            "description": "Parâmetro(s) não enviado(s)..",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageError"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Atualizar pendência.",
        "operationId": "5a25a0ee2b19850c2869b6e0",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Código do App do Cliente.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "type": "boolean"
                    },
                    "Mensagens": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Não foi encontrado."
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultadoDaOperacaoRest_Pendencia_"
              }
            }
          }
        }
      }
    },
    "/politicaaceitacao": {
      "get": {
        "description": "Retorna as políticas de aceitação vinculadas a um determinado CNPJ.",
        "operationId": "5a25a0ee2b19850c2869b6e1",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "description": "CNPJ do parceiro.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Código do App do Cliente.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_IQueryable_PoliticaAceitacao_"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Empresa não encontrada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Parâmetro(s) não informado(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageError"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/produto": {
      "get": {
        "description": "Retorna os Produtos disponíveis para um determinado modelo de proposta.",
        "operationId": "5a25a0ee2b19850c2869b6e2",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codigoModeloProposta",
            "in": "query",
            "description": "Código do modelo de proposta.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Código do App do Cliente.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_IQueryable_Produto_"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Modelo de proposta não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Parâmetro(s) não informado(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageError"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/produto/{id}": {
      "get": {
        "description": "Retorna um produto específico de um modelo de proposta.",
        "operationId": "5a25a0ee2b19850c2869b6e3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador do produto.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codigoModeloProposta",
            "in": "query",
            "description": "Código do modelo de proposta.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_Produto_"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Produto não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Parâmetro(s) não informado(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageError"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/produtor/{documento}/parceiro": {
      "get": {
        "description": "Recupera os parceiros de um determinado produtor.",
        "operationId": "5a25a0ee2b19850c2869b6e4",
        "parameters": [
          {
            "name": "documento",
            "in": "path",
            "description": "Documento do produtor(CPF/CNPJ) (ou agente, vendedor).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_IQueryable_Parceiro_"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/proposta/{id}": {
      "post": {
        "description": "Recupera uma proposta específica e a bateria de comissões",
        "parameters": [
          {
            "name": "client_id",
            "in": "header",
            "description": "Código do App do Cliente.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "empresa",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PropostaEmpresarial"
                  },
                  {
                    "$ref": "#/components/schemas/proposta"
                  }
                ],
                "example": {
                  "PROPOSTA": {
                    "NUMERO": "0",
                    "DT_PROTOCOLO": "2019-07-01",
                    "DT_ASSINATURA": "2019-07-08",
                    "DT_INDEXACAO": "2019-07-08",
                    "DADOS_PROPONENTE": {
                      "MATRICULA": "0",
                      "NOME": "CENARIO DE TESTE 001",
                      "DT_NASCIMENTO": "1994-10-27",
                      "IDADE": 24,
                      "SEXO": "MASCULINO",
                      "ESTADO_CIVIL": "SOLTEIRO",
                      "CPF": "24011549061",
                      "TITULAR_CPF": true,
                      "EMAIL": "TESTEPROPOSTA@GMAIL.COM",
                      "RESIDE_BRASIL": true,
                      "RENDA_MENSAL": 5000,
                      "NUM_FILHOS": 0,
                      "PPE": false,
                      "DOCUMENTOS": {
                        "DOCUMENTO": {
                          "NATUREZA_DOC": "RG",
                          "DOCUMENTO": "36969739-X",
                          "ORGAO_EXPEDIDOR": "SSP",
                          "DATA_EXPEDICAO": "2012-07-26T00:00:00.000Z"
                        }
                      },
                      "ENDERECOS": {
                        "TP_CORRESPONDENCIA": "RESIDENCIAL",
                        "ENDERECO": [
                          {
                            "TIPO": "RESIDENCIAL",
                            "LOGRADOURO": "TRAVESSA BELAS ARTES",
                            "NUMERO": 15,
                            "COMPLEMENTO": "ANEXO",
                            "BAIRRO": "CENTRO",
                            "CIDADE": "RIO DE JANEIRO",
                            "ESTADO": "RJ",
                            "CEP": "20060000"
                          }
                        ]
                      },
                      "TELEFONES": {
                        "TELEFONE": [
                          {
                            "TIPO": "CELULAR",
                            "DDI": 55,
                            "DDD": 21,
                            "NUMERO": 991122345
                          }
                        ]
                      },
                      "PROFISSAO": {
                        "CODIGO": "2410-05",
                        "DESCRICAO": "ADVOGADO",
                        "CATEGORIA": "EMPREGADO",
                        "EMPRESA": {
                          "NOME": "MONGERAL AEGON"
                        }
                      }
                    },
                    "PLANOS": {
                      "VL_TOTAL": 188.79,
                      "PLANO": [
                        {
                          "CODIGO": 1780,
                          "NOME": "DOENÇAS GRAVES",
                          "VL_AP_INICIAL": 0,
                          "VL_PORTAB": 0,
                          "TP_TRIBUTACAO": "NENHUM",
                          "DT_CONCESSAO": "1900-01-01",
                          "PRAZO_CERTO": 0,
                          "PRAZO_DECRESCIMO": 0,
                          "COBERTURAS": {
                            "COBERTURA": {
                              "CODIGO": 34,
                              "VL_CONTRIB": 53.58,
                              "VL_COBERTURA": 120000
                            }
                          }
                        }
                      ]
                    },
                    "BENEFICIARIOS": {
                      "BENEFICIARIO": [
                        {
                          "NOME": "BENEFICIARIO DE TESTE",
                          "NASCIMENTO": "1974-07-28",
                          "PARENTESCO": "CONJUGE",
                          "PARTICIPACAO": 100,
                          "CD_PLANO": 1811
                        }
                      ]
                    },
                    "DECLARACOES": {
                      "DPS": {
                        "TIPO_DPS": "TITULAR",
                        "PESO": 103,
                        "ALTURA": 1.8,
                        "PERGUNTAS": {
                          "PERGUNTA": [
                            {
                              "NUMERO": 1,
                              "QUESTAO": "Encontra-se com algum problema de saude ou faz uso de  algum medicamento atualmente? Em caso afirmativo, informar qual.",
                              "RESPOSTA": "false,",
                              "OBS_RESPOSTA": null
                            }
                          ]
                        }
                      }
                    },
                    "DADOS_COBRANCA": {
                      "PERIODICIDADE": "MENSAL",
                      "TIPO_COBRANCA": "BOLETO",
                      "DIA_VENCIMENTO": 25,
                      "COMP_DEBITO": "07/2019",
                      "NUM_CONVENIO": 0
                    },
                    "USO_MONGERAL": {
                      "CONV_ADESAO": "AD0332",
                      "ACAO_MARKETING": "0493",
                      "ALTERNATIVA": 1,
                      "SUCURSAL": "F22",
                      "DIR_REGIONAL": "16057572",
                      "GER_SUCURSAL": "03002658",
                      "GER_COMERCIAL": "18040942",
                      "AGENTE": 0,
                      "CORRETOR1": "07037818",
                      "CORRETOR2": 0,
                      "AGENTE_FIDELIZACAO": 0,
                      "MODELO_PROPOSTA": "YZ",
                      "MODELO_PROPOSTA_GED": "YZ",
                      "TIPO_COMISSAO": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "numeroProposta": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/proponente/{cpf}/empresa/{cnpj}/proposta": {
      "get": {
        "description": "Obtém um array de Documento contendo os documentos registrados no GED da Mongeral, de acordo com o índice informado.",
        "operationId": "5a25a0ee2be19850c2869b6da",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "description": "CPF do proponente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cnpj",
            "in": "path",
            "required": true,
            "description": "CNPJ do parceiro.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "required": true,
            "description": "Código do App do Cliente.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Propostas"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "500": {
            "description": "Erro Desconhecido."
          }
        }
      }
    },
    "/questionario": {
      "get": {
        "description": "Retorna os Produtos disponíveis para um determinado modelo de proposta.",
        "operationId": "5a25a0ee2b19850c2869b6e7",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codigoModeloProposta",
            "in": "query",
            "description": "Código do modelo de proposta.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_IQueryable_Questionario_"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Solicitação inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/questionario/{id}": {
      "get": {
        "description": "Retorna um produto específico de um modelo de proposta.",
        "operationId": "5a25a0ee2b19850c2869b6e8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador do produto.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codigoModeloProposta",
            "in": "query",
            "description": "Código do modelo de proposta.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "$ref": "#/components/schemas/Questionario"
                    },
                    "Mensagens": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitação inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Não foi encontrado."
          },
          "405": {
            "description": "Parâmetro(s) não enviado(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageError"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/simulacao": {
      "post": {
        "description": "Retorna capitais ou prêmios, filtrados pelo limite operacional disponível para os produtos e perfil informados.",
        "operationId": "5a25a0ee2b19850c2869b6e9",
        "parameters": [
          {
            "name": "cnpj",
            "in": "query",
            "description": "CNPJ da empresa.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codigoModeloProposta",
            "in": "query",
            "description": "Indica se deve retornar a versão completa ou reduzida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "simulacoes": {
                    "$ref": "#/components/schemas/ResultadoSimulacaoProposta"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "$ref": "#/components/schemas/ResultadoDaOperacaoRest_ResultadoSimulacaoProposta_"
                    },
                    "Mensagens": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitação inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "405": {
            "description": "Parâmetro(s) não informado(s).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageError"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/SimulacaoEmpresarial": {
      "post": {
        "description": "Simula a contratação de produtos empresariais globais.",
        "parameters": [
          {
            "name": "cnpj",
            "in": "query",
            "description": "CNPJ da empresa.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codigoModeloProposta",
            "in": "query",
            "description": "Indica se deve retornar a versão completa ou reduzida.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "simulacoes"
                ],
                "properties": {
                  "simulacoes": {
                    "$ref": "#/components/schemas/ResultadoSimulacaoPropostaEmpresarial"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Valor": {
                      "$ref": "#/components/schemas/ResultadoDaOperacaoRest_ResultadoSimulacaoProposta_"
                    },
                    "Mensagens": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "HouveErrosDuranteProcessamento": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitação inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Recurso não encontrado."
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "erro": "Erro não identificado."
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponse500"
                    },
                    {
                      "$ref": "#/components/schemas/Error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/timeline": {
      "get": {
        "description": "Retorna tudo que aconteceu com a proposta.",
        "operationId": "5a25a0ee2b19850c2869b6ea",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numeroProposta",
            "in": "query",
            "description": "Número da Proposta que se deseja verificar o histórico.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cnpj",
            "in": "query",
            "description": "CNPJ do parceiro.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "client_id",
            "in": "header",
            "description": "Token de autorização.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDaOperacaoRest_IQueryable_TimeLine_"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido."
          },
          "404": {
            "description": "Não foi encontrado modelo de proposta ou empresa.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [],
  "servers": [
    {
      "url": "https://apis-sbx.mongeralaegon.com.br/apiseguradora/v2"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Código JWT para autenticação."
      }
    },
    "schemas": {
      "PropostaEmpresarial": {
        "type": "object",
        "properties": {
          "PropostaEmpresarial": {
            "type": "object",
            "properties": {
              "DataProtocolo": {
                "description": "Data do protocolo",
                "type": "string",
                "format": "date"
              },
              "DataAssinatura": {
                "description": "Data da assinatura",
                "type": "string",
                "format": "date"
              },
              "DataIndexacao": {
                "description": "Data da indexação",
                "type": "string",
                "format": "date"
              },
              "NumeroProposta": {
                "description": "Número da Proposta",
                "type": "integer",
                "format": "int64"
              },
              "Cliente": {
                "type": "object",
                "properties": {
                  "CNPJ": {
                    "type": "string"
                  },
                  "NomeFantasia": {
                    "type": "string"
                  },
                  "RazaoSocial": {
                    "type": "string"
                  },
                  "InscricaoEstadual": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "InscricaoMunicipal": {
                    "type": "string"
                  },
                  "CEI": {
                    "description": "Cadastro Específico do INSS - Empresas Individuais",
                    "type": "integer",
                    "format": "int64"
                  },
                  "DataAbertura": {
                    "description": "Data de Abertura da Empresa",
                    "type": "string",
                    "format": "date"
                  },
                  "NaturezaJuridica": {
                    "description": "Constituição Juridico-Institucional",
                    "type": "string"
                  },
                  "CNAE": {
                    "description": "Atividade Empresarial Principal, conforme contrato social",
                    "type": "string"
                  },
                  "UltimoExercicioFiscal": {
                    "type": "object",
                    "properties": {
                      "Ano": {
                        "type": "string"
                      },
                      "Faturamento": {
                        "type": "string"
                      },
                      "Resultado": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "Ano",
                      "Faturamento",
                      "Resultado"
                    ]
                  },
                  "Endereco": {
                    "$ref": "#/components/schemas/PropostaEmpresarialEndereco"
                  },
                  "Telefones": {
                    "type": "object",
                    "properties": {
                      "Telefone": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "$ref": "#/components/schemas/PropostaEmpresarialTelefone"
                        }
                      }
                    },
                    "required": [
                      "Telefone"
                    ]
                  },
                  "Emails": {
                    "type": "object",
                    "properties": {
                      "Email": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "$ref": "#/components/schemas/PropostaEmpresarialEmail"
                        }
                      }
                    },
                    "required": [
                      "Email"
                    ]
                  },
                  "Socios": {
                    "type": "object",
                    "properties": {
                      "Socio": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "Nome": {
                              "type": "string"
                            },
                            "TipoDocumento": {
                              "description": "Tipo do Documento",
                              "type": "string",
                              "enum": [
                                "CNH",
                                "CPF",
                                "PASSAPORTE",
                                "RG",
                                "REGISTRO PROFISSIONAL",
                                "CNPJ",
                                "OUTRO"
                              ]
                            },
                            "Documento": {
                              "description": "Documento do Sócio",
                              "type": "integer",
                              "format": "int64",
                              "maximum": 99999999999999
                            },
                            "DataNascimento": {
                              "description": "Data de Nascimento do Sócio - Obrigatório para Pessoa Física",
                              "type": "string",
                              "format": "date"
                            },
                            "DataAbertura": {
                              "description": "Data de Abertura da Empresa Sócia - Obrigatório para Pessoa Jurídica",
                              "type": "string",
                              "format": "date"
                            },
                            "Cargo": {
                              "type": "string"
                            },
                            "TipoPessoa": {
                              "type": "string",
                              "enum": [
                                "FISICA",
                                "JURIDICA"
                              ]
                            },
                            "Enderecos": {
                              "type": "object",
                              "properties": {
                                "Endereco": {
                                  "description": "Endereço",
                                  "type": "array",
                                  "minItems": 1,
                                  "items": {
                                    "$ref": "#/components/schemas/PropostaEmpresarialEndereco"
                                  }
                                }
                              },
                              "required": [
                                "Endereco"
                              ]
                            },
                            "Telefones": {
                              "type": "object",
                              "properties": {
                                "Telefone": {
                                  "type": "array",
                                  "minItems": 1,
                                  "items": {
                                    "$ref": "#/components/schemas/PropostaEmpresarialTelefone"
                                  }
                                }
                              },
                              "required": [
                                "Telefone"
                              ]
                            },
                            "Emails": {
                              "type": "object",
                              "properties": {
                                "Email": {
                                  "type": "array",
                                  "minItems": 1,
                                  "items": {
                                    "$ref": "#/components/schemas/PropostaEmpresarialEmail"
                                  }
                                }
                              },
                              "required": [
                                "Email"
                              ]
                            }
                          },
                          "required": [
                            "Nome",
                            "TipoDocumento",
                            "Documento",
                            "DataNascimento",
                            "DataAbertura",
                            "Cargo",
                            "TipoPessoa",
                            "Enderecos",
                            "Telefones",
                            "Emails"
                          ]
                        }
                      }
                    }
                  },
                  "RepresentantesLegais": {
                    "description": "Quadro de Representantes da Empresa",
                    "type": "object",
                    "properties": {
                      "RepresentanteLegal": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "Nome": {
                              "type": "string"
                            },
                            "CPF": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "DataNascimento": {
                              "type": "string",
                              "format": "date"
                            },
                            "Cargo": {
                              "type": "string"
                            },
                            "Telefones": {
                              "type": "object",
                              "properties": {
                                "Telefone": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/PropostaEmpresarialTelefone"
                                  }
                                }
                              }
                            },
                            "Emails": {
                              "type": "object",
                              "properties": {
                                "Email": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/PropostaEmpresarialEmail"
                                  },
                                  "minItems": 1
                                }
                              }
                            }
                          },
                          "required": [
                            "Nome",
                            "CPF",
                            "DataNascimento",
                            "Cargo",
                            "Telefones"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "NomeFantasia",
                  "RazaoSocial",
                  "DataAbertura",
                  "NaturezaJuridica",
                  "CNAE",
                  "UltimoExercicioFiscal",
                  "Endereco",
                  "Telefones",
                  "Emails"
                ]
              },
              "PlanoEmpresarial": {
                "type": "object",
                "properties": {
                  "TipoSegurado": {
                    "description": "Tipo de Segurado",
                    "type": "string",
                    "enum": [
                      "TITULAR",
                      "TITULARCONJUGEFILHOS"
                    ]
                  },
                  "GrupoSegurado": {
                    "type": "object",
                    "properties": {
                      "Cargos": {
                        "type": "object",
                        "properties": {
                          "Cargo": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "Cargo"
                        ]
                      }
                    },
                    "required": [
                      "Cargos"
                    ]
                  },
                  "QuantidadesSociosDiretores": {
                    "description": "Número Total de Sócios e Diretores",
                    "type": "integer"
                  },
                  "QuantidadeVidas": {
                    "description": "Número Total de Vidas Seguradas",
                    "type": "integer"
                  },
                  "Modulo": {
                    "description": "Opção do Grupamento de Coberturas",
                    "type": "object",
                    "properties": {
                      "CodigoModulo": {
                        "description": "Identificador do Módulo Escolhido",
                        "type": "integer",
                        "format": "int64"
                      },
                      "Premio": {
                        "description": "Valor do Prêmio do Módulo",
                        "type": "number",
                        "format": "float"
                      },
                      "Coberturas": {
                        "description": "Coberturas do Módulo, SAF e Opcionais",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "Cobertura": {
                              "type": "object",
                              "properties": {
                                "ItemProduto": {
                                  "type": "integer"
                                },
                                "CapitalSegurado": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "Premio": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "TipoItemProduto": {
                                  "description": "Tipo da Cobertura Contratada",
                                  "type": "integer"
                                },
                                "CoberturaOpcional": {
                                  "description": "Marcador de Coberturas Adicionais",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "ItemProduto",
                                "CapitalSegurado",
                                "Premio",
                                "TipoItemProduto",
                                "CoberturaOpcional"
                              ]
                            }
                          },
                          "required": [
                            "Cobertura"
                          ]
                        }
                      }
                    },
                    "required": [
                      "CodigoModulo",
                      "Premio",
                      "Coberturas"
                    ]
                  }
                },
                "required": [
                  "GrupoSegurado",
                  "QuantidadesSociosDiretores",
                  "QuantidadeVidas",
                  "CapitalSeguradoIndividual",
                  "Modulo"
                ]
              },
              "PrimeiroPagamento": {
                "description": "Dados do Primeiro Pagamento",
                "type": "object",
                "properties": {
                  "Forma": {
                    "description": "Forma de Pagamento",
                    "type": "string",
                    "enum": [
                      "DEBITO",
                      "CARTAO",
                      "BOLETO",
                      "CHEQUE",
                      "DEPOSITO"
                    ]
                  },
                  "Deposito": {
                    "type": "object",
                    "properties": {
                      "NumeroDepositoBancario": {
                        "description": "Número Depósito Bancário",
                        "type": "string",
                        "maxLength": 50
                      },
                      "NumeroBanco": {
                        "description": "Número do Banco Recebedor",
                        "type": "integer",
                        "maximum": 999
                      },
                      "Agencia": {
                        "type": "object",
                        "properties": {
                          "Numero": {
                            "type": "string",
                            "maxLength": 4
                          },
                          "DV": {
                            "type": "string",
                            "maxLength": 1
                          }
                        },
                        "required": [
                          "Numero",
                          "DV"
                        ]
                      },
                      "ContaCorrente": {
                        "type": "object",
                        "properties": {
                          "Numero": {
                            "type": "string",
                            "maxLength": 13
                          },
                          "DV": {
                            "type": "string",
                            "maxLength": 1
                          }
                        },
                        "required": [
                          "Numero",
                          "DV"
                        ]
                      }
                    },
                    "required": [
                      "NumeroDepositoBancario",
                      "NumeroBanco",
                      "Agencia",
                      "ContaCorrente"
                    ]
                  },
                  "Debito": {
                    "description": "Dados Para Débito Bancário",
                    "type": "object",
                    "properties": {
                      "Banco": {
                        "type": "object",
                        "properties": {
                          "Numero": {
                            "type": "integer",
                            "maximum": 999
                          },
                          "Nome": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "Numero",
                          "Nome"
                        ]
                      },
                      "Agencia": {
                        "type": "object",
                        "properties": {
                          "Numero": {
                            "description": "Número da agência",
                            "type": "string",
                            "maxLength": 4
                          },
                          "DV": {
                            "description": "Dígito Verificador da agência",
                            "type": "string",
                            "maxLength": 1
                          }
                        },
                        "required": [
                          "Numero",
                          "DV"
                        ]
                      },
                      "ContaCorrente": {
                        "type": "object",
                        "properties": {
                          "Numero": {
                            "description": "Número da Conta Corrente",
                            "type": "string",
                            "maxLength": 13
                          },
                          "DV": {
                            "description": "Dígito Verificador da Conta Corrente",
                            "type": "string",
                            "maxLength": 1
                          }
                        },
                        "required": [
                          "Numero",
                          "DV"
                        ]
                      },
                      "Correntista": {
                        "type": "object",
                        "properties": {
                          "Nome": {
                            "description": "Nome do Correntista",
                            "type": "string",
                            "maxLength": 200
                          },
                          "TipoPessoa": {
                            "description": "Tipo Pessoa",
                            "type": "string",
                            "enum": [
                              "FISICA",
                              "JURIDICA"
                            ]
                          },
                          "TipoDocumento": {
                            "description": "Tipo do Documento",
                            "type": "string",
                            "enum": [
                              "CNH",
                              "CPF",
                              "PASSAPORTE",
                              "RG",
                              "REGISTRO PROFISSIONAL",
                              "CNPJ",
                              "OUTRO"
                            ]
                          },
                          "Documento": {
                            "description": "Documento do Correntista",
                            "type": "integer",
                            "format": "int64",
                            "maximum": 99999999999999
                          }
                        },
                        "required": [
                          "Nome",
                          "TipoPessoa",
                          "TipoDocumento",
                          "Documento"
                        ]
                      }
                    },
                    "required": [
                      "Banco",
                      "Agencia",
                      "ContaCorrente",
                      "Correntista"
                    ]
                  },
                  "DataPagamento": {
                    "description": "Data do Primeiro Pagamento",
                    "type": "string",
                    "format": "date"
                  },
                  "Valor": {
                    "description": "Valor",
                    "type": "number",
                    "format": "float"
                  }
                }
              },
              "Cobranca": {
                "type": "object",
                "properties": {
                  "Forma": {
                    "description": "Forma de Pagamento",
                    "type": "string",
                    "enum": [
                      "DEBITO",
                      "CARTAO",
                      "BOLETO",
                      "CHEQUE",
                      "DEPOSITO"
                    ]
                  },
                  "Periodicidade": {
                    "description": "Periodicidade do Pagamento",
                    "type": "string",
                    "enum": [
                      "ANUAL",
                      "BIMESTRAL",
                      "MENSAL",
                      "OUTRO",
                      "QUADRIMESTRAL",
                      "SEMESTRAL",
                      "TRIMESTRAL",
                      "UNICA"
                    ]
                  },
                  "DiaVencimento": {
                    "description": "Dia de vencimento",
                    "type": "integer",
                    "maximum": 31
                  },
                  "Debito": {
                    "description": "Dados Para Débito Bancário",
                    "type": "object",
                    "properties": {
                      "Banco": {
                        "type": "object",
                        "properties": {
                          "Numero": {
                            "type": "integer"
                          },
                          "Nome": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "Numero",
                          "Nome"
                        ]
                      },
                      "Agencia": {
                        "type": "object",
                        "properties": {
                          "Numero": {
                            "description": "Número da agência",
                            "type": "string",
                            "maxLength": 4
                          },
                          "DV": {
                            "description": "Dígito Verificador da agência",
                            "type": "string",
                            "maxLength": 1
                          }
                        },
                        "required": [
                          "Numero",
                          "DV"
                        ]
                      },
                      "ContaCorrente": {
                        "type": "object",
                        "properties": {
                          "Numero": {
                            "description": "Número da Conta Corrente",
                            "type": "string",
                            "maxLength": 13
                          },
                          "DV": {
                            "description": "Dígito Verificador da Conta Corrente",
                            "type": "string",
                            "maxLength": 1
                          }
                        },
                        "required": [
                          "Numero",
                          "DV"
                        ]
                      },
                      "Correntista": {
                        "type": "object",
                        "properties": {
                          "Nome": {
                            "description": "Nome do Correntista",
                            "type": "string",
                            "maxLength": 200
                          },
                          "TipoPessoa": {
                            "description": "Tipo Pessoa",
                            "type": "string",
                            "enum": [
                              "FISICA",
                              "JURIDICA"
                            ]
                          },
                          "TipoDocumento": {
                            "description": "Tipo do Documento",
                            "type": "string",
                            "enum": [
                              "CNH",
                              "CPF",
                              "PASSAPORTE",
                              "RG",
                              "REGISTRO PROFISSIONAL",
                              "CNPJ",
                              "OUTRO"
                            ]
                          },
                          "Documento": {
                            "description": "Documento do Correntista",
                            "type": "integer",
                            "format": "int64",
                            "maximum": 99999999999999
                          }
                        },
                        "required": [
                          "Nome",
                          "TipoPessoa",
                          "TipoDocumento",
                          "Documento"
                        ]
                      }
                    },
                    "required": [
                      "Banco",
                      "Agencia",
                      "ContaCorrente",
                      "Correntista"
                    ]
                  },
                  "RecebimentoFatura": {
                    "type": "string",
                    "enum": [
                      "IMPRESSO",
                      "EMAIL"
                    ]
                  }
                },
                "required": [
                  "Forma",
                  "Periodicidade",
                  "DiaVencimento",
                  "Debito",
                  "RecebimentoFatura"
                ]
              },
              "UsoSeguradora": {
                "type": "object",
                "properties": {
                  "Estipulante": {
                    "type": "object",
                    "properties": {
                      "CNPJ": {
                        "description": "CNPJ do Estipulante",
                        "type": "string"
                      }
                    },
                    "required": [
                      "CNPJ"
                    ]
                  },
                  "LinhaDAgua": {
                    "description": "Linha DAgua do Contrato",
                    "type": "number",
                    "format": "float"
                  },
                  "FatorComissionamento": {
                    "description": "Fator Comissionamento",
                    "type": "string"
                  },
                  "ModeloProposta": {
                    "description": "Modelo Proposta",
                    "type": "string"
                  },
                  "Origem": {
                    "description": "Origem de Venda",
                    "type": "string"
                  },
                  "Sucursal": {
                    "description": "Sucursal",
                    "type": "string"
                  },
                  "ConvenioAdesao": {
                    "description": "Convênio de Adesão",
                    "type": "string",
                    "maxLength": 6
                  },
                  "AcaoMarketing": {
                    "description": "Ação de Marketing",
                    "type": "string",
                    "maxLength": 6
                  },
                  "Alternativa": {
                    "type": "integer",
                    "maximum": 9
                  },
                  "DiretorRegional": {
                    "description": "Diretor Regional",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 99999999
                  },
                  "GerenteSucursal": {
                    "description": "Gerente Sucursal",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 99999999
                  },
                  "GerenteComercial": {
                    "description": "Gerente Comercial",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 99999999
                  },
                  "Agente": {
                    "description": "Agente",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 99999999
                  },
                  "AgenteFidelizacao": {
                    "description": "Agente Fidelização",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 99999999
                  },
                  "Corretor1": {
                    "type": "object",
                    "properties": {
                      "Codigo": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "PercentualComissao": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1,
                        "maximum": 100
                      }
                    },
                    "required": [
                      "Codigo"
                    ]
                  },
                  "Corretor2": {
                    "type": "object",
                    "properties": {
                      "Codigo": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "PercentualComissao": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 100
                      }
                    },
                    "required": [
                      "Codigo"
                    ]
                  },
                  "TipoComissao": {
                    "description": "Tipo Comissão",
                    "type": "integer"
                  },
                  "Treinando": {
                    "description": "Corretor Treinando",
                    "type": "string"
                  },
                  "IdExterno": {
                    "description": "IdExterno",
                    "type": "string"
                  },
                  "IdExterno2": {
                    "description": "IdExterno2",
                    "type": "string"
                  }
                },
                "required": [
                  "Estipulante",
                  "LinhaDAgua",
                  "FatorComissionamento",
                  "ModeloProposta",
                  "Origem",
                  "Sucursal",
                  "AcaoMarketing",
                  "Alternativa",
                  "DiretorRegional",
                  "GerenteSucursal",
                  "GerenteComercial",
                  "Agente",
                  "AgenteFidelizacao",
                  "Corretor1"
                ]
              },
              "UsoCorretor": {
                "type": "object",
                "properties": {
                  "Nome": {
                    "description": "Nome",
                    "type": "string",
                    "maxLength": 50
                  },
                  "CodigoSUSEP": {
                    "description": "Código do SUSEP",
                    "type": "string",
                    "maxLength": 20
                  }
                },
                "required": [
                  "Nome",
                  "CodigoSUSEP"
                ]
              },
              "Observacao": {
                "description": "Observações do Contrato",
                "type": "string"
              }
            },
            "required": [
              "DataProtocolo",
              "DataAssinatura",
              "DataIndexacao",
              "NumeroProposta",
              "Cliente",
              "PlanoEmpresarial",
              "PrimeiroPagamento",
              "Cobranca",
              "UsoSeguradora",
              "Observacao"
            ]
          }
        },
        "required": [
          "PropostaEmpresarial"
        ]
      },
      "PropostaEmpresarialEndereco": {
        "type": "object",
        "properties": {
          "Tipo": {
            "description": "Tipo de Endereço",
            "type": "string",
            "enum": [
              "COMERCIAL",
              "RESIDENCIAL"
            ]
          },
          "TipoLogradouro": {
            "type": "integer",
            "maximum": 99
          },
          "Logradouro": {
            "type": "string"
          },
          "Numero": {
            "type": "integer"
          },
          "Complemento": {
            "type": "string"
          },
          "Bairro": {
            "type": "string",
            "maxLength": 50
          },
          "Cidade": {
            "type": "string",
            "maxLength": 50
          },
          "UF": {
            "type": "string",
            "maxLength": 2
          },
          "CEP": {
            "type": "integer",
            "format": "int64",
            "maximum": 99999999
          }
        },
        "required": [
          "Tipo",
          "TipoLogradouro",
          "Logradouro",
          "Numero",
          "Bairro",
          "Cidade",
          "UF",
          "CEP"
        ]
      },
      "PropostaEmpresarialTelefone": {
        "type": "object",
        "properties": {
          "Tipo": {
            "description": "Tipo de Telefone",
            "type": "string",
            "enum": [
              "CELULAR",
              "COMERCIAL",
              "FAX",
              "OUTRO",
              "RESIDENCIAL"
            ]
          },
          "DDI": {
            "type": "integer"
          },
          "DDD": {
            "type": "integer"
          },
          "Numero": {
            "type": "integer"
          },
          "Ramal": {
            "type": "integer"
          }
        },
        "required": [
          "Tipo",
          "DDI",
          "DDD",
          "Numero"
        ]
      },
      "PropostaEmpresarialEmail": {
        "type": "object",
        "properties": {
          "Endereco": {
            "description": "Endereço de Email",
            "type": "string"
          }
        },
        "required": [
          "Endereco"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "string"
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ErrorResponse500": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "object",
            "properties": {
              "Valor": {
                "type": "string"
              },
              "Mensagens": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "HouveErrosDuranteProcessamento": {
                "type": "boolean"
              },
              "CondicaoFalha": {
                "type": "integer"
              }
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "MessageError": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "erro": {
            "type": "string"
          }
        }
      },
      "ModeloProposta": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "descricaoModeloProposta": {
            "type": "string"
          },
          "dataUltimaAlteracao": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "formasPagamento": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32"
                },
                "descricao": {
                  "type": "string"
                }
              }
            }
          },
          "diasVencimento": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "periodicidades": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "descricao": {
                  "type": "string"
                }
              }
            }
          },
          "ticketMinimo": {
            "type": "number",
            "format": "decimal"
          },
          "politicaValidacao": {
            "type": "string"
          },
          "canalComercializacao": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "descricao": {
                "type": "string"
              }
            }
          },
          "grupo": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "descricao": {
                "type": "string"
              }
            }
          },
          "produtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Produto"
            }
          },
          "politicaAceitacao": {
            "$ref": "#/components/schemas/PoliticaAceitacao"
          },
          "questionarios": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Propostas": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Proposta"
        }
      },
      "proposta": {
        "type": "object",
        "properties": {
          "PROPOSTA": {
            "type": "object",
            "properties": {
              "NUMERO": {
                "type": "integer",
                "maximum": 999999999
              },
              "DT_PROTOCOLO": {
                "description": "Data do protocolo",
                "type": "string",
                "format": "date"
              },
              "DT_ASSINATURA": {
                "description": "Data da assinatura",
                "type": "string",
                "format": "date"
              },
              "DT_INDEXACAO": {
                "description": "Data indexacao",
                "type": "string",
                "format": "date"
              },
              "INSTITUIDOR": {
                "description": "Instituidor",
                "type": "object",
                "properties": {
                  "NUMERO": {
                    "description": "Numero instituidor",
                    "type": "string",
                    "maxLength": 6
                  },
                  "NOME": {
                    "description": "Nome instituidor",
                    "type": "string",
                    "maxLength": 50
                  }
                },
                "required": [
                  "NUMERO",
                  "NOME"
                ]
              },
              "DADOS_PROPONENTE": {
                "description": "Dados do Proponente",
                "type": "object",
                "properties": {
                  "MATRICULA": {
                    "description": "Matricula do proponente",
                    "type": "integer",
                    "format": "int64"
                  },
                  "NOME": {
                    "description": "Nome do proponente",
                    "type": "string",
                    "maxLength": 50
                  },
                  "DT_NASCIMENTO": {
                    "description": "Data de Nascimento do proponente",
                    "type": "string",
                    "format": "date"
                  },
                  "IDADE": {
                    "description": "Idade do proponente",
                    "type": "integer"
                  },
                  "SEXO": {
                    "description": "Sexo do proponente",
                    "type": "string",
                    "enum": [
                      "FEMININO",
                      "MASCULINO"
                    ]
                  },
                  "ESTADO_CIVIL": {
                    "description": "Estado Civil do proponente",
                    "type": "string",
                    "enum": [
                      "CASADO",
                      "DIVORCIADO",
                      "OUTRO",
                      "SEPARADO",
                      "SOLTEIRO",
                      "VIUVO"
                    ]
                  },
                  "CPF": {
                    "description": "CPF do proponente",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 99999999999
                  },
                  "TITULAR_CPF": {
                    "description": "Titular do CPF do proponente",
                    "type": "boolean"
                  },
                  "EMAIL": {
                    "description": "E-mail do proponente",
                    "type": "string",
                    "maxLength": 50
                  },
                  "RESIDE_BRASIL": {
                    "description": "Reside no Brasil?",
                    "type": "boolean"
                  },
                  "RENDA_MENSAL": {
                    "description": "Renda Mensal do proponente",
                    "type": "number",
                    "format": "float"
                  },
                  "NUM_FILHOS": {
                    "description": "Número de Filhos do proponente",
                    "type": "integer"
                  },
                  "PPE": {
                    "description": "Pessoa Politicamente Exposta",
                    "type": "boolean"
                  },
                  "DOCUMENTOS": {
                    "description": "Documento",
                    "type": "object",
                    "properties": {
                      "DOCUMENTO": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "NATUREZA_DOC": {
                              "description": "Tipo de documento",
                              "type": "string",
                              "enum": [
                                "CNH",
                                "CPF",
                                "PASSAPORTE",
                                "RG",
                                "REGISTRO PROFISSIONAL",
                                "CNPJ",
                                "OUTRO"
                              ]
                            },
                            "DOCUMENTO": {
                              "description": "Documento",
                              "type": "string",
                              "maxLength": 15
                            },
                            "ORGAO_EXPEDIDOR": {
                              "description": "Órgão Expedidor do documento",
                              "type": "string",
                              "maxLength": 6
                            },
                            "DATA_EXPEDICAO": {
                              "description": "Data da Expedição do documento",
                              "type": "string",
                              "format": "date"
                            }
                          },
                          "required": [
                            "NATUREZA_DOC",
                            "DOCUMENTO",
                            "ORGAO_EXPEDIDOR"
                          ]
                        }
                      }
                    }
                  },
                  "ENDERECOS": {
                    "type": "object",
                    "properties": {
                      "TP_CORRESPONDENCIA": {
                        "description": "Tipo de Correspondência",
                        "type": "string",
                        "enum": [
                          "COMERCIAL",
                          "RESIDENCIAL"
                        ]
                      },
                      "ENDERECO": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "TIPO": {
                              "type": "string",
                              "enum": [
                                "COMERCIAL",
                                "RESIDENCIAL"
                              ]
                            },
                            "LOGRADOURO": {
                              "type": "string"
                            },
                            "NUMERO": {
                              "type": "string"
                            },
                            "COMPLEMENTO": {
                              "type": "string"
                            },
                            "BAIRRO": {
                              "type": "string",
                              "maxLength": 35
                            },
                            "CIDADE": {
                              "type": "string",
                              "maxLength": 35
                            },
                            "ESTADO": {
                              "type": "string",
                              "maxLength": 2
                            },
                            "CEP": {
                              "type": "integer",
                              "maximum": 99999999
                            }
                          },
                          "required": [
                            "TIPO",
                            "LOGRADOURO",
                            "NUMERO",
                            "COMPLEMENTO",
                            "BAIRRO",
                            "CIDADE",
                            "ESTADO",
                            "CEP"
                          ]
                        }
                      }
                    },
                    "required": [
                      "TP_CORRESPONDENCIA",
                      "ENDERECO"
                    ]
                  },
                  "TELEFONES": {
                    "type": "object",
                    "properties": {
                      "TELEFONE": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "TIPO": {
                              "description": "Tipo de Telefone",
                              "type": "string",
                              "enum": [
                                "CELULAR",
                                "COMERCIAL",
                                "FAX",
                                "OUTRO",
                                "RESIDENCIAL"
                              ]
                            },
                            "DDI": {
                              "description": "DDI",
                              "type": "integer"
                            },
                            "DDD": {
                              "description": "DDD",
                              "type": "integer"
                            },
                            "NUMERO": {
                              "description": "Número",
                              "type": "integer"
                            }
                          },
                          "required": [
                            "TIPO",
                            "DDI",
                            "DDD",
                            "NUMERO"
                          ]
                        }
                      }
                    },
                    "required": [
                      "TELEFONE"
                    ]
                  },
                  "PROFISSAO": {
                    "type": "object",
                    "properties": {
                      "CODIGO": {
                        "description": "Codigo da profissão",
                        "type": "string"
                      },
                      "DESCRICAO": {
                        "description": "Descricao da profissão",
                        "type": "string",
                        "maxLength": 40
                      },
                      "CATEGORIA": {
                        "description": "Categoria da profissão",
                        "type": "string",
                        "enum": [
                          "AUTONOMO",
                          "AUXILIAR NECROPSIA",
                          "DATILOSCOPISTA",
                          "DELEGADO",
                          "EMPREGADO",
                          "EMPREGADOR",
                          "INSPETOR",
                          "INVESTIGADOR",
                          "OFICIAL DE CARTORIO",
                          "OUTROS",
                          "PERITO CRIMINAL",
                          "PERITO LEGISTA",
                          "SERVIDOR PUBLICO",
                          "TECNICO NECROPSIA"
                        ]
                      },
                      "EMPRESA": {
                        "type": "object",
                        "properties": {
                          "NOME": {
                            "description": "Nome da empresa",
                            "type": "string",
                            "maxLength": 60
                          },
                          "ENDERECO": {
                            "description": "Endereco da empresa",
                            "type": "object",
                            "properties": {
                              "TIPO": {
                                "type": "string",
                                "enum": [
                                  "COMERCIAL",
                                  "RESIDENCIAL"
                                ]
                              },
                              "LOGRADOURO": {
                                "type": "string"
                              },
                              "NUMERO": {
                                "type": "string"
                              },
                              "COMPLEMENTO": {
                                "type": "string"
                              },
                              "BAIRRO": {
                                "type": "string",
                                "maxLength": 35
                              },
                              "CIDADE": {
                                "type": "string",
                                "maxLength": 35
                              },
                              "ESTADO": {
                                "type": "string",
                                "maxLength": 2
                              },
                              "CEP": {
                                "type": "integer",
                                "maximum": 99999999
                              }
                            },
                            "required": [
                              "TIPO",
                              "LOGRADOURO",
                              "NUMERO",
                              "COMPLEMENTO",
                              "BAIRRO",
                              "CIDADE",
                              "ESTADO",
                              "CEP"
                            ]
                          }
                        },
                        "required": [
                          "NOME"
                        ]
                      }
                    },
                    "required": [
                      "CODIGO",
                      "DESCRICAO",
                      "CATEGORIA",
                      "EMPRESA"
                    ]
                  },
                  "REPRESENTANTE_LEGAL": {
                    "type": "object",
                    "properties": {
                      "NOME": {
                        "description": "Nome do representante legal",
                        "type": "string",
                        "maxLength": 50
                      },
                      "CPF": {
                        "description": "CPF do representante legal",
                        "type": "integer",
                        "format": "int64",
                        "maximum": 99999999999
                      },
                      "PARENTESCO": {
                        "description": "Parentesco do representante legal",
                        "type": "string",
                        "enum": [
                          "AVO",
                          "COMPANHEIRO",
                          "CONJUGE",
                          "FILHO",
                          "IRMAO",
                          "MAE",
                          "NENHUM",
                          "NETO",
                          "PAI",
                          "SOBRINHO",
                          "TIO"
                        ]
                      }
                    },
                    "required": [
                      "NOME",
                      "CPF",
                      "PARENTESCO"
                    ]
                  },
                  "PARENTESCO_CORRETOR": {
                    "description": "Parentesco com corretor/funcionário",
                    "type": "object",
                    "properties": {
                      "POSSUI_PARENTESCO": {
                        "description": "Possui Parentesco com corretor/funcionário",
                        "type": "boolean"
                      },
                      "PARENTESCO": {
                        "description": "Parentesco com corretor/funcionário",
                        "type": "string",
                        "enum": [
                          "AVO",
                          "COMPANHEIRO",
                          "CONJUGE",
                          "FILHO",
                          "IRMAO",
                          "MAE",
                          "NENHUM",
                          "NETO",
                          "PAI",
                          "SOBRINHO",
                          "TIO"
                        ]
                      }
                    },
                    "required": [
                      "POSSUI_PARENTESCO",
                      "PARENTESCO"
                    ]
                  }
                },
                "required": [
                  "MATRICULA",
                  "NOME",
                  "DT_NASCIMENTO",
                  "IDADE",
                  "SEXO",
                  "ESTADO_CIVIL",
                  "CPF",
                  "TITULAR_CPF",
                  "EMAIL",
                  "RESIDE_BRASIL",
                  "RENDA_MENSAL",
                  "NUM_FILHOS",
                  "PPE",
                  "DOCUMENTOS",
                  "ENDERECOS",
                  "TELEFONES",
                  "PROFISSAO"
                ]
              },
              "PLANOS": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "VL_TOTAL": {
                      "description": "Valor total dos Planos",
                      "type": "number"
                    },
                    "PLANO": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "CODIGO": {
                            "description": "Codigo do plano",
                            "type": "integer",
                            "maximum": 9999
                          },
                          "NOME": {
                            "description": "Nome do plano",
                            "type": "string",
                            "maxLength": 50
                          },
                          "VL_AP_INICIAL": {
                            "description": "Valor aporte inicial do plano",
                            "type": "number",
                            "format": "float"
                          },
                          "VL_PORTAB": {
                            "description": "Valor portabilidade do plano",
                            "type": "number",
                            "format": "float"
                          },
                          "TP_TRIBUTACAO": {
                            "description": "Tipo de tributação",
                            "type": "string",
                            "enum": [
                              "NENHUM",
                              "PROGRESSIVA",
                              "REGRESSIVA"
                            ]
                          },
                          "DT_CONCESSAO": {
                            "description": "Data de concessão",
                            "type": "string",
                            "format": "date"
                          },
                          "PRAZO_CERTO": {
                            "description": "Prazo certo",
                            "type": "integer",
                            "maximum": 999
                          },
                          "PRAZO_DECRESCIMO": {
                            "description": "Prazo Decréscimo",
                            "type": "integer"
                          },
                          "COBERTURAS": {
                            "description": "",
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "properties": {
                                "COBERTURA": {
                                  "type": "object",
                                  "properties": {
                                    "CODIGO": {
                                      "description": "Código da Cobertura",
                                      "type": "integer"
                                    },
                                    "VL_CONTRIB": {
                                      "description": "Valor Contribuição Cobertura",
                                      "type": "number",
                                      "format": "float"
                                    },
                                    "VL_COBERTURA": {
                                      "description": "Valor Cobertura",
                                      "type": "number",
                                      "format": "float"
                                    }
                                  },
                                  "required": [
                                    "CODIGO",
                                    "VL_CONTRIB",
                                    "VL_COBERTURA"
                                  ]
                                }
                              },
                              "required": [
                                "COBERTURA"
                              ]
                            }
                          }
                        },
                        "required": [
                          "CODIGO",
                          "NOME",
                          "VL_AP_INICIAL",
                          "VL_PORTAB",
                          "TP_TRIBUTACAO",
                          "COBERTURAS"
                        ]
                      }
                    }
                  },
                  "required": [
                    "VL_TOTAL",
                    "PLANO"
                  ]
                }
              },
              "BENEFICIARIOS": {
                "type": "object",
                "properties": {
                  "BENEFICIARIO": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BENEFICIARIO"
                    }
                  }
                },
                "required": [
                  "BENEFICIARIO"
                ]
              },
              "DECLARACOES": {
                "type": "object",
                "properties": {
                  "DPS": {
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 2,
                    "items": {
                      "type": "object",
                      "properties": {
                        "TIPO_DPS": {
                          "description": "Tipo de DPS",
                          "type": "string",
                          "enum": [
                            "CONJUGE",
                            "TITULAR"
                          ]
                        },
                        "PESO": {
                          "description": "Peso",
                          "type": "number",
                          "format": "float",
                          "maximum": 999.99
                        },
                        "ALTURA": {
                          "description": "Altura",
                          "type": "number",
                          "format": "float",
                          "maximum": 9.99
                        },
                        "PERGUNTAS": {
                          "type": "object",
                          "properties": {
                            "PERGUNTA": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/PERGUNTA"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "TIPO_DPS",
                        "PESO",
                        "ALTURA",
                        "PERGUNTAS"
                      ]
                    }
                  },
                  "Questionarios": {
                    "type": "object",
                    "properties": {
                      "Questionario": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Identificador de questionário",
                              "type": "integer"
                            },
                            "descricao": {
                              "description": "Descrição de questionário",
                              "type": "string"
                            },
                            "tipo": {
                              "description": "Tipo de questionário",
                              "type": "string"
                            },
                            "relacaoSegurado": {
                              "description": "Relação Segurado",
                              "type": "string",
                              "enum": [
                                "Titular",
                                "Conjuge"
                              ]
                            },
                            "perguntas": {
                              "type": "object",
                              "properties": {
                                "pergunta": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/pergunta"
                                  }
                                }
                              },
                              "required": [
                                "pergunta"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "descricao",
                            "tipo",
                            "relacaoSegurado",
                            "perguntas"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "DADOS_COBRANCA": {
                "description": "Dados da Cobrança",
                "type": "object",
                "properties": {
                  "PERIODICIDADE": {
                    "description": "Periodicidade",
                    "type": "string",
                    "enum": [
                      "ANUAL",
                      "BIMESTRAL",
                      "MENSAL",
                      "OUTRO",
                      "QUADRIMESTRAL",
                      "SEMESTRAL",
                      "TRIMESTRAL",
                      "UNICA"
                    ]
                  },
                  "TIPO_COBRANCA": {
                    "description": "Tipo de Cobrança",
                    "type": "string",
                    "enum": [
                      "BOLETO",
                      "CONVENIO",
                      "DEBITO",
                      "CARTAO",
                      "FOLHA",
                      "NENHUM"
                    ]
                  },
                  "DIA_VENCIMENTO": {
                    "description": "Dia de vencimento",
                    "type": "integer",
                    "maximum": 31
                  },
                  "COMP_DEBITO": {
                    "description": "Competência Débito",
                    "type": "string",
                    "pattern": "^\\d{2}/\\d{4}$",
                    "example": "10/2019"
                  },
                  "NUM_CONVENIO": {
                    "description": "Número do Convenio",
                    "type": "string"
                  },
                  "IDADE_PAGAMENTO_ANTECIPADO": {
                    "description": "Idade Pagamento Antecipado",
                    "type": "string"
                  },
                  "TEMPO_PAGAMENTO_ANTECIPADO": {
                    "description": "Tempo Pagamento Antecipado",
                    "type": "string"
                  },
                  "DEBITO": {
                    "type": "object",
                    "properties": {
                      "COD_ORGAO": {
                        "type": "integer",
                        "maximum": 999999
                      },
                      "BANCO": {
                        "description": "Informações do Banco",
                        "type": "object",
                        "properties": {
                          "NUMERO": {
                            "description": "Número do Banco",
                            "type": "integer",
                            "maximum": 999
                          },
                          "NOME": {
                            "description": "Nome do Banco",
                            "type": "string"
                          }
                        },
                        "required": [
                          "NUMERO",
                          "NOME"
                        ]
                      },
                      "AGENCIA": {
                        "type": "object",
                        "properties": {
                          "NUMERO": {
                            "description": "Número da Agência",
                            "type": "string",
                            "maxLength": 4
                          },
                          "DV": {
                            "description": "Dígito Verificador da Agência",
                            "type": "integer",
                            "maximum": 9999
                          }
                        },
                        "required": [
                          "NUMERO",
                          "DV"
                        ]
                      },
                      "CONTA_CORRENTE": {
                        "description": "Conta Corrente",
                        "type": "object",
                        "properties": {
                          "NUMERO": {
                            "description": "Número da Conta Corrente",
                            "type": "string",
                            "maxLength": 13
                          },
                          "DV": {
                            "description": "Dígito Verificador da Conta Corrente",
                            "type": "string",
                            "maxLength": 1
                          }
                        },
                        "required": [
                          "NUMERO",
                          "DV"
                        ]
                      },
                      "CORRENTISTA": {
                        "description": "Correntista",
                        "type": "object",
                        "properties": {
                          "NOME": {
                            "description": "Nome do Correntista",
                            "type": "string"
                          },
                          "TIPO_PESSOA": {
                            "description": "Tipo Pessoa",
                            "type": "string",
                            "enum": [
                              "FISICA",
                              "JURIDICA"
                            ]
                          },
                          "TP_DOCUMENTO": {
                            "description": "Tipo do Documento",
                            "type": "string",
                            "enum": [
                              "CNH",
                              "CPF",
                              "PASSAPORTE",
                              "RG",
                              "REGISTRO PROFISSIONAL",
                              "CNPJ",
                              "OUTRO"
                            ]
                          },
                          "DOCUMENTO": {
                            "description": "Documento do Correntista",
                            "type": "integer",
                            "format": "int64",
                            "maximum": 99999999999999
                          }
                        },
                        "required": [
                          "NOME",
                          "TIPO_PESSOA",
                          "TP_DOCUMENTO",
                          "DOCUMENTO"
                        ]
                      }
                    },
                    "required": [
                      "COD_ORGAO",
                      "BANCO",
                      "AGENCIA",
                      "CONTA_CORRENTE",
                      "CORRENTISTA"
                    ]
                  },
                  "FOLHA": {
                    "type": "object",
                    "properties": {
                      "NOME_FUNCIONARIO": {
                        "description": "Nome do funcionário",
                        "type": "string",
                        "maxLength": 50
                      },
                      "MAT_FUNCIONAL": {
                        "description": "Matrícula do funcionário",
                        "type": "string",
                        "maxLength": 15
                      },
                      "COMPLEMENTO": {
                        "description": "Complemento",
                        "type": "string",
                        "maxLength": 15
                      },
                      "COD_ORGAO": {
                        "description": "Código do Órgão",
                        "type": "integer",
                        "maximum": 9999
                      },
                      "CPF_FUNCIONARIO": {
                        "description": "CPF Funcionário",
                        "type": "integer",
                        "format": "int64",
                        "maximum": 99999999999
                      },
                      "SUBDIVISOES": {
                        "description": "Subdivisão",
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 3,
                        "items": {
                          "type": "object",
                          "properties": {
                            "NIVEL": {
                              "description": "Nível",
                              "type": "string",
                              "maxLength": 3
                            },
                            "CODIGO": {
                              "description": "Código",
                              "type": "string",
                              "maxLength": 9
                            }
                          },
                          "required": [
                            "NIVEL",
                            "CODIGO"
                          ]
                        }
                      }
                    },
                    "required": [
                      "NOME_FUNCIONARIO",
                      "MAT_FUNCIONAL",
                      "COMPLEMENTO",
                      "COD_ORGAO",
                      "CPF_FUNCIONARIO"
                    ]
                  },
                  "CARTAO": {
                    "type": "object",
                    "properties": {
                      "NUMERO": {
                        "description": "Número do cartão",
                        "type": "string"
                      },
                      "VALIDADE": {
                        "description": "Validade do cartão",
                        "type": "string",
                        "format": "date"
                      },
                      "NUM_PRE_AUTORIZACAO": {
                        "description": "Número pré-autorização",
                        "type": "integer",
                        "format": "int64",
                        "maximum": 9999999999
                      },
                      "BANDEIRA": {
                        "description": "Bandeira do cartão",
                        "type": "string"
                      },
                      "PARCELA": {
                        "description": "Parcela",
                        "type": "integer"
                      },
                      "PORTADOR": {
                        "description": "Portador",
                        "type": "object",
                        "properties": {
                          "NOME": {
                            "description": "Nome do Portador",
                            "type": "string"
                          },
                          "TIPO_PESSOA": {
                            "description": "Tipo de Pessoa",
                            "type": "string",
                            "enum": [
                              "FISICA",
                              "JURIDICA"
                            ]
                          },
                          "DOCUMENTO": {
                            "description": "Documento do Portador",
                            "type": "string"
                          }
                        },
                        "required": [
                          "NOME",
                          "TIPO_PESSOA",
                          "DOCUMENTO"
                        ]
                      }
                    },
                    "required": [
                      "NUMERO",
                      "VALIDADE",
                      "NUM_PRE_AUTORIZACAO",
                      "BANDEIRA",
                      "PARCELA",
                      "PORTADOR"
                    ]
                  }
                },
                "required": [
                  "PERIODICIDADE",
                  "TIPO_COBRANCA",
                  "DIA_VENCIMENTO",
                  "COMP_DEBITO",
                  "NUM_CONVENIO"
                ]
              },
              "RECIBO_PRIM_PAGTO": {
                "description": "Recibo primeiro pagamento",
                "type": "object",
                "properties": {
                  "TP_PAGAMENTO": {
                    "description": "Tipo de Pagamento",
                    "type": "string",
                    "enum": [
                      "CHEQUE",
                      "ESPECIE",
                      "NENHUM",
                      "CARTAOCREDITO"
                    ]
                  },
                  "VALOR": {
                    "description": "Valor do pagamento",
                    "type": "number",
                    "format": "float"
                  },
                  "NM_PAGADOR": {
                    "description": "Nome do Pagador",
                    "type": "string",
                    "maxLength": 50
                  },
                  "CPF_PAGADOR": {
                    "description": "CPF do pagador",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 99999999999
                  },
                  "CARTAO_CREDITO": {
                    "description": "Cartão do Pagador",
                    "type": "object",
                    "properties": {
                      "NUM_PRE_AUTORIZACAO": {
                        "description": "Numero da pré-autorização",
                        "type": "integer",
                        "format": "int64",
                        "maximum": 99999999999
                      }
                    },
                    "required": [
                      "NUM_PRE_AUTORIZACAO"
                    ]
                  },
                  "CHEQUE": {
                    "type": "object",
                    "properties": {
                      "NR_CHEQUE": {
                        "description": "Número do cheque",
                        "type": "string",
                        "maxLength": 20
                      },
                      "NR_BANCO": {
                        "description": "Número do banco",
                        "type": "string",
                        "maxLength": 3
                      },
                      "NR_AGENCIA": {
                        "description": "Número da agência",
                        "type": "string",
                        "maxLength": 5
                      },
                      "CONTA_CORRENTE": {
                        "description": "Conta corrente",
                        "type": "string",
                        "maxLength": 14
                      }
                    },
                    "required": [
                      "NR_CHEQUE",
                      "NR_BANCO",
                      "NR_AGENCIA",
                      "CONTA_CORRENTE"
                    ]
                  }
                },
                "required": [
                  "TP_PAGAMENTO",
                  "VALOR",
                  "NM_PAGADOR"
                ]
              },
              "USO_MONGERAL": {
                "type": "object",
                "properties": {
                  "CONV_ADESAO": {
                    "description": "Convênio Adesão",
                    "type": "string",
                    "maxLength": 6
                  },
                  "ACAO_MARKETING": {
                    "description": "Ação Marketing",
                    "type": "string",
                    "maxLength": 6
                  },
                  "ALTERNATIVA": {
                    "description": "Alternativa",
                    "type": "integer",
                    "maximum": 9
                  },
                  "SUCURSAL": {
                    "description": "Nome da Sucursal",
                    "type": "integer",
                    "maximum": 99999999
                  },
                  "DIR_REGIONAL": {
                    "description": "Diretor Regional",
                    "type": "integer",
                    "maximum": 99999999
                  },
                  "GER_SUCURSAL": {
                    "description": "Gerente Sucursal",
                    "type": "integer",
                    "maximum": 99999999
                  },
                  "GER_COMERCIAL": {
                    "description": "Gerente Comercial",
                    "type": "integer",
                    "maximum": 99999999
                  },
                  "AGENTE": {
                    "description": "Agente",
                    "type": "integer",
                    "maximum": 99999999
                  },
                  "CORRETOR1": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "CORRETOR2": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "AGENTE_FIDELIZACAO": {
                    "description": "Agente fidelização",
                    "type": "integer",
                    "maximum": 99999999
                  },
                  "MODELO_PROPOSTA": {
                    "description": "Modelo da proposta",
                    "type": "string"
                  },
                  "MODELO_PROPOSTA_GED": {
                    "description": "Modelo Proposta GED",
                    "type": "string"
                  },
                  "TIPO_COMISSAO": {
                    "description": "Tipo Comissão",
                    "type": "integer"
                  }
                },
                "required": [
                  "CONV_ADESAO",
                  "ACAO_MARKETING",
                  "ALTERNATIVA",
                  "SUCURSAL",
                  "DIR_REGIONAL",
                  "GER_SUCURSAL",
                  "GER_COMERCIAL",
                  "AGENTE",
                  "CORRETOR1",
                  "CORRETOR2",
                  "AGENTE_FIDELIZACAO",
                  "MODELO_PROPOSTA"
                ]
              },
              "USO_CORRETOR": {
                "type": "object",
                "properties": {
                  "NOME": {
                    "description": "Nome",
                    "type": "string",
                    "maxLength": 50
                  },
                  "CD_SUSEP": {
                    "description": "Codigo do SUSEP",
                    "type": "string",
                    "maxLength": 20
                  }
                },
                "required": [
                  "NOME",
                  "CD_SUSEP"
                ]
              }
            },
            "required": [
              "DT_PROTOCOLO",
              "DT_ASSINATURA",
              "DT_INDEXACAO",
              "DADOS_PROPONENTE",
              "PLANOS",
              "DADOS_COBRANCA",
              "USO_MONGERAL"
            ]
          }
        },
        "required": [
          "PROPOSTA"
        ]
      },
      "pergunta": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Identificador da Pergunta",
            "type": "integer"
          },
          "descricao": {
            "description": "Descrição da Pergunta",
            "type": "string"
          },
          "respostas": {
            "type": "object",
            "properties": {
              "resposta": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Identificador da Resposta",
                      "type": "integer"
                    },
                    "descricao": {
                      "description": "Descrição da Resposta",
                      "type": "string"
                    },
                    "subPerguntas": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/pergunta"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "descricao"
                  ]
                }
              }
            },
            "required": [
              "resposta"
            ]
          }
        },
        "required": [
          "id",
          "descricao",
          "respostas"
        ]
      },
      "PERGUNTA": {
        "type": "object",
        "properties": {
          "NUMERO": {
            "description": "Número da pergunta",
            "type": "integer"
          },
          "QUESTAO": {
            "description": "Questão",
            "type": "string",
            "maxLength": 300
          },
          "RESPOSTA": {
            "description": "Resposta",
            "type": "boolean"
          },
          "OBS_RESPOSTA": {
            "description": "Observação Resposta",
            "type": "string",
            "maxLength": 300
          }
        },
        "required": [
          "NUMERO",
          "QUESTAO",
          "RESPOSTA",
          "OBS_RESPOSTA"
        ]
      },
      "BENEFICIARIO": {
        "type": "object",
        "properties": {
          "NOME": {
            "description": "Nome do Beneficiario",
            "type": "string",
            "maxLength": 50
          },
          "NASCIMENTO": {
            "description": "Data de nascimento do beneficiário",
            "type": "string",
            "format": "date"
          },
          "PARENTESCO": {
            "description": "Parentesco do beneficiário",
            "type": "string",
            "enum": [
              "AVO",
              "COMPANHEIRO",
              "CONJUGE",
              "FILHO",
              "IRMAO",
              "MAE",
              "NENHUM",
              "NETO",
              "PAI",
              "SOBRINHO",
              "TIO"
            ]
          },
          "PARTICIPACAO": {
            "description": "Participação",
            "type": "number",
            "format": "float",
            "maximum": 100
          },
          "CD_PLANO": {
            "description": "Código do Plano",
            "type": "integer",
            "maximum": 9999
          }
        },
        "required": [
          "NOME",
          "NASCIMENTO",
          "PARENTESCO",
          "PARTICIPACAO",
          "CD_PLANO"
        ]
      },
      "Proposta": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "data"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "modelo": {
            "type": "string"
          },
          "nomeProponente": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              },
              "dataUltimaAlteracao": {
                "type": "string",
                "format": "date"
              },
              "observacoes": {
                "type": "string"
              },
              "pendencias": {
                "type": "string"
              }
            }
          },
          "tipo": {
            "type": "string"
          },
          "valorCoberturaPrincipal": {
            "type": "string"
          },
          "valorTotal": {
            "type": "string"
          },
          "produtos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string"
                },
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "coberturas": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "nome": {
                        "type": "string"
                      },
                      "tipo": {
                        "type": "string"
                      },
                      "itemProdutoId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "premio": {
                        "type": "string"
                      },
                      "capitalSegurado": {
                        "type": "string"
                      },
                      "obrigatorio": {
                        "type": "boolean"
                      },
                      "prazoCerto": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Dominio": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Descricao": {
            "type": "string"
          },
          "Auxiliar": {
            "type": "string"
          }
        }
      },
      "IndiceDocumento": {
        "type": "object",
        "properties": {
          "valor": {
            "type": "string"
          },
          "indice": {
            "type": "string"
          }
        }
      },
      "Documento": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dataDocumento": {
            "format": "date-time",
            "type": "string"
          },
          "formato": {
            "type": "string"
          },
          "grupoDocumento": {
            "type": "string"
          },
          "qtdePaginas": {
            "format": "int32",
            "type": "integer"
          },
          "tipoDocumento": {
            "type": "string"
          },
          "nomeArquivo": {
            "type": "string"
          },
          "indicesDocumento": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndiceDocumento"
            }
          },
          "pagina": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentoPagina"
            }
          }
        }
      },
      "DocumentoPagina": {
        "type": "object",
        "properties": {
          "pagina": {
            "format": "int32",
            "type": "integer"
          },
          "dados": {
            "type": "string"
          }
        }
      },
      "Produtor": {
        "type": "object",
        "properties": {
          "UnidadeProducao": {
            "type": "string"
          },
          "Produtores": {
            "type": "string"
          },
          "codigoProdutor": {
            "type": "string"
          },
          "documento": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "cargo": {
            "type": "string"
          },
          "CodigoUnidadeProducao": {
            "type": "string"
          },
          "OrdemHierarquia": {
            "type": "string"
          },
          "NumeroSusep": {
            "type": "string"
          }
        }
      },
      "TimeLine": {
        "type": "object",
        "properties": {
          "Data": {
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "Usuario": {
            "type": "string"
          },
          "Pendencias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pendencia"
            }
          },
          "AgendamentosMedicos": {
            "$ref": "#/components/schemas/AgendamentoMedico"
          }
        }
      },
      "AgendamentoMedico": {
        "type": "object",
        "properties": {
          "chamadas": {
            "$ref": "#/components/schemas/Chamadas"
          },
          "notificacoes": {
            "$ref": "#/components/schemas/Notificacoes"
          },
          "situacoes": {
            "$ref": "#/components/schemas/Situacoes"
          }
        }
      },
      "Chamadas": {
        "type": "object",
        "properties": {
          "datahora": {
            "format": "date-time",
            "type": "string"
          },
          "motivo": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "Notificacoes": {
        "type": "object",
        "properties": {
          "texto": {
            "type": "string"
          },
          "datahora": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "Situacoes": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string"
          },
          "datahora": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "Questionario": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "dataUltimaAlteracao": {
            "format": "date-time",
            "type": "string"
          },
          "tipo": {
            "$ref": "#/components/schemas/TipoQuestionario"
          },
          "sexo": {
            "$ref": "#/components/schemas/Sexo"
          },
          "relacaoSegurado": {
            "$ref": "#/components/schemas/TipoRelacaoSegurado"
          },
          "condicoes": {
            "$ref": "#/components/schemas/TipoCondicoes"
          },
          "perguntas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemQuestionario"
            }
          }
        }
      },
      "TipoQuestionario": {
        "type": "object",
        "properties": {
          "sigla": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "Sexo": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "ItemQuestionario": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "tipo": {
            "$ref": "#/components/schemas/TipoItemQuestionario"
          },
          "ordem": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "TipoItemQuestionario": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "Parceiro": {
        "type": "object",
        "properties": {
          "cnpj": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "produtoresDaBuscaAssociados": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PrazoRenda": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "valorMinimo": {
            "format": "int32",
            "type": "integer"
          },
          "valorMaximo": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "TipoCobertura": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "TipoRelacaoSegurado": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "TipoCondicoes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "chave": {
              "type": "string"
            },
            "operacao": {
              "type": "string"
            },
            "valor": {
              "type": "string"
            }
          }
        }
      },
      "Causa": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "Cobertura": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "itemProdutoId": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "descricaoComercial": {
            "type": "string"
          },
          "obrigatoria": {
            "type": "boolean"
          },
          "prazoCerto": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "prazoRenda": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrazoRenda"
            }
          },
          "tipo": {
            "$ref": "#/components/schemas/TipoCobertura"
          },
          "tipoRelacaoSegurado": {
            "$ref": "#/components/schemas/TipoRelacaoSegurado"
          },
          "idadeEntrada": {
            "format": "int32",
            "type": "integer"
          },
          "idadeSaida": {
            "format": "int32",
            "type": "integer"
          },
          "idadeExclusao": {
            "format": "int32",
            "type": "integer"
          },
          "indicarBeneficiario": {
            "type": "boolean"
          },
          "valorFixo": {
            "format": "float",
            "type": "number"
          },
          "capitalFixo": {
            "format": "float",
            "type": "number"
          },
          "causas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Causa"
            }
          },
          "coberturaPrincipal": {
            "type": "boolean"
          },
          "exigeDPS": {
            "type": "boolean"
          },
          "fundos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fundo"
            }
          },
          "profissoesRecusadas": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "ufsRecusadas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "prazoDecrescimo": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "idadeAntecipacao": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "tempoAntecipacao": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "dependenciasCoberturaProdutos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DependenciaCoberturaProduto"
            }
          },
          "valorMinimoCapitalContratacao": {
            "format": "int32",
            "type": "integer"
          },
          "valorLimiteCapitalReferencia": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "DependenciaCoberturaProduto": {
        "type": "object",
        "properties": {
          "itemProdutoId": {
            "format": "int32",
            "type": "integer"
          },
          "tipo": {
            "format": "int32",
            "type": "integer"
          },
          "percentualMinimoReferencia": {
            "format": "int32",
            "type": "integer"
          },
          "percentualMaximoReferencia": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "DependenciaProduto": {
        "type": "object",
        "properties": {
          "produtoId": {
            "format": "int32",
            "type": "integer"
          },
          "tipo": {
            "$ref": "#/components/schemas/TipoDependenciaProduto"
          }
        }
      },
      "TipoDependenciaProduto": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "sigla": {
            "type": "string"
          }
        }
      },
      "Fundo": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "cnpj": {
            "type": "string"
          },
          "sigla": {
            "type": "string"
          },
          "nomeFantasia": {
            "type": "string"
          },
          "percentualRendaVariavel": {
            "format": "float",
            "type": "number"
          }
        }
      },
      "TipoProponente": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "Periodicidade": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "Produto": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "descricaoComercial": {
            "type": "string"
          },
          "dataUltimaAlteracao": {
            "format": "date-time",
            "type": "string"
          },
          "coberturas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cobertura"
            }
          },
          "dependenciasProdutos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DependenciaProduto"
            }
          },
          "fundos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fundo"
            }
          },
          "periodicidades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Periodicidade"
            }
          },
          "tipoProponente": {
            "$ref": "#/components/schemas/TipoProponente"
          },
          "idadeMinima": {
            "format": "int32",
            "type": "integer"
          },
          "idadeMaxima": {
            "format": "int32",
            "type": "integer"
          },
          "idadeExclusao": {
            "format": "int32",
            "type": "integer"
          },
          "indicarBeneficiario": {
            "type": "boolean"
          },
          "exigeDPS": {
            "type": "boolean"
          },
          "prazoCerto": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "prazoRenda": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrazoRenda"
            }
          },
          "profissoesAceitas": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "profissoesRecusadas": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "ufsRecusadas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "prazoDecrescimo": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "idadeAntecipacao": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "tempoAntecipacao": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "formasPagamento": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormaPagamento"
            }
          }
        }
      },
      "FormaPagamento": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "Pendencia": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "idProposta": {
            "format": "int64",
            "type": "integer"
          },
          "dataPendencia": {
            "format": "date-time",
            "type": "string"
          },
          "responsavel": {
            "type": "string"
          },
          "grupo": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "resposta": {
            "type": "string"
          },
          "autor": {
            "type": "string"
          },
          "documento": {
            "$ref": "#/components/schemas/Documento"
          }
        }
      },
      "PoliticaAceitacao": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "dataUltimaAlteracao": {
            "format": "date-time",
            "type": "string"
          },
          "imcMinimoRecusa": {
            "format": "int32",
            "type": "integer"
          },
          "imcMaximoRecusa": {
            "format": "int32",
            "type": "integer"
          },
          "imcMinimoExame": {
            "format": "int32",
            "type": "integer"
          },
          "imcMaximoExame": {
            "format": "int32",
            "type": "integer"
          },
          "cigarrosRecusa": {
            "format": "int32",
            "type": "integer"
          },
          "cigarrosExame": {
            "format": "int32",
            "type": "integer"
          },
          "limitesOperacionaisPorProfissao": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimiteOperacionalProfissao"
            }
          },
          "limitesOperacionaisPorRenda": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimiteOperacionalRenda"
            }
          },
          "limitesOperacionaisPorFaixaEtaria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimiteOperacionalFaixaEtaria"
            }
          }
        }
      },
      "LimiteOperacionalFaixaEtaria": {
        "type": "object",
        "properties": {
          "causa": {
            "type": "string"
          },
          "idadeInicial": {
            "format": "int32",
            "type": "integer"
          },
          "idadeFinal": {
            "format": "int32",
            "type": "integer"
          },
          "valorMaximoCapitalSegurado": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "LimiteOperacionalRenda": {
        "type": "object",
        "properties": {
          "causa": {
            "type": "string"
          },
          "idadeInicial": {
            "format": "int32",
            "type": "integer"
          },
          "idadeFinal": {
            "format": "int32",
            "type": "integer"
          },
          "multiploRenda": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "LimiteOperacionalProfissao": {
        "type": "object",
        "properties": {
          "causa": {
            "type": "string"
          },
          "profissaoId": {
            "format": "int32",
            "type": "integer"
          },
          "valorMaximoCapitalSegurado": {
            "format": "float",
            "type": "number"
          }
        }
      },
      "ResultadoSimulacaoProposta": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SimulacaoProposta"
        }
      },
      "ResultadoSimulacaoPropostaEmpresarial": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SimulacaoPropostaEmpresarial"
        }
      },
      "SimulacaoProposta": {
        "type": "object",
        "properties": {
          "proponente": {
            "$ref": "#/components/schemas/SimulacaoProponente"
          },
          "periodicidadeCobrancaId": {
            "format": "int32",
            "type": "integer"
          },
          "prazoDecrescimo": {
            "format": "int32",
            "type": "integer"
          },
          "prazoPagamentoAntecipado": {
            "format": "int32",
            "type": "integer"
          },
          "idadePagamentoAntecipado": {
            "format": "int32",
            "type": "integer"
          },
          "prazoCerto": {
            "format": "int32",
            "type": "integer"
          },
          "prazoRenda": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SimulacaoPropostaEmpresarial": {
        "type": "object",
        "required": [
          "comissionamento",
          "proponente"
        ],
        "properties": {
          "proponente": {
            "$ref": "#/components/schemas/SimulacaoProponenteEmpresarial"
          },
          "capitalIndividual": {
            "format": "int32",
            "type": "integer"
          },
          "comissionamento": {
            "$ref": "#/components/schemas/Comissionamento"
          },
          "quantidadeVidas": {
            "format": "int32",
            "type": "integer"
          },
          "uf": {
            "type": "string"
          },
          "modulos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "modulo": {
                  "type": "string"
                },
                "coberturas": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimulacaoCoberturaEmpresarial"
                  }
                },
                "identificacao": {
                  "format": "int32",
                  "type": "integer"
                },
                "cargos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cargos"
                  }
                }
              }
            }
          },
          "periodicidade": {
            "type": "string",
            "enum": [
              "Unica",
              "Diaria",
              "Esporadica",
              "Semanal",
              "Quinzenal",
              "Mensal",
              "Bimestral",
              "Trimestral",
              "Quadrimestral",
              "Semestral",
              "Anual"
            ]
          }
        }
      },
      "SimulacaoProponente": {
        "type": "object",
        "properties": {
          "tipoRelacaoSeguradoId": {
            "format": "int32",
            "type": "integer"
          },
          "nome": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "dataNascimento": {
            "format": "date-time",
            "type": "string"
          },
          "sexoId": {
            "format": "int32",
            "type": "integer"
          },
          "profissaoCbo": {
            "type": "string"
          },
          "renda": {
            "format": "double",
            "type": "number"
          },
          "uf": {
            "type": "string"
          },
          "origem": {
            "type": "string"
          },
          "patrimonio": {
            "format": "double",
            "type": "number"
          },
          "declaracaoIRId": {
            "type": "string"
          },
          "despesasEducacao": {
            "format": "double",
            "type": "number"
          },
          "despesasMensais": {
            "format": "double",
            "type": "number"
          },
          "formaContato": {
            "type": "string"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "historicoDoenca": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimulacaoHistoricoDoenca"
            }
          },
          "historicoDoencaFamiliar": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimulacaoHistoricoDoenca"
            }
          },
          "investimentos": {
            "format": "double",
            "type": "number"
          },
          "medicamentos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimulacaoMedicamento"
            }
          },
          "telefones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimulacaoTelefone"
            }
          },
          "classeRisco": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SimulacaoProponenteEmpresarial": {
        "type": "object",
        "properties": {
          "cnpj": {
            "type": "integer"
          },
          "cnae": {
            "type": "integer"
          }
        }
      },
      "SimulacaoProduto": {
        "type": "object",
        "properties": {
          "idProduto": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "descricaoComercial": {
            "type": "string"
          },
          "coberturas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimulacaoCobertura"
            }
          }
        }
      },
      "SimulacaoHistoricoDoenca": {
        "type": "object",
        "properties": {
          "codigoCID10": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "SimulacaoMedicamento": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "SimulacaoTelefone": {
        "type": "object",
        "properties": {
          "ddd": {
            "format": "int32",
            "type": "integer"
          },
          "numero": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SimulacaoCoberturaSeguradora": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "tipoId": {
            "format": "int32",
            "type": "integer"
          },
          "capitalBase": {
            "format": "double",
            "type": "number"
          },
          "causaId": {
            "type": "string"
          },
          "limite": {
            "format": "double",
            "type": "number"
          },
          "tipoCapitalBase": {
            "type": "string"
          },
          "premioBase": {
            "format": "double",
            "type": "number"
          },
          "prazoCerto": {
            "format": "int32",
            "type": "integer"
          },
          "prazoRenda": {
            "format": "int32",
            "type": "integer"
          },
          "prazoDecrescimo": {
            "format": "int32",
            "type": "integer"
          },
          "prazoPagamentoAntecipado": {
            "format": "int32",
            "type": "integer"
          },
          "idadePagamentoAntecipado": {
            "format": "int32",
            "type": "integer"
          },
          "custoFixo": {
            "type": "string"
          },
          "dependenciasCoberturaProdutos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "valorMinimoCapitalContratacao": {
            "type": "string",
            "format": "decimal"
          },
          "valorLimiteCapitalReferencia": {
            "type": "string",
            "format": "decimal"
          }
        }
      },
      "SimulacaoCobertura": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "descricao": {
            "type": "string"
          },
          "tipoId": {
            "format": "int32",
            "type": "integer"
          },
          "capitalBase": {
            "format": "double",
            "type": "number"
          },
          "causaId": {
            "type": "string"
          },
          "limite": {
            "format": "double",
            "type": "number"
          },
          "tipoCapitalBase": {
            "type": "string"
          },
          "premioBase": {
            "format": "double",
            "type": "number"
          },
          "prazoCerto": {
            "format": "int32",
            "type": "integer"
          },
          "prazoRenda": {
            "format": "int32",
            "type": "integer"
          },
          "prazoDecrescimo": {
            "format": "int32",
            "type": "integer"
          },
          "prazoPagamentoAntecipado": {
            "format": "int32",
            "type": "integer"
          },
          "idadePagamentoAntecipado": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SimulacaoCoberturaEmpresarial": {
        "type": "object",
        "properties": {
          "coberturaOpcional": {
            "type": "boolean"
          },
          "possuiCapitalIndependente": {
            "type": "boolean"
          },
          "nome": {
            "type": "string"
          },
          "sigla": {
            "type": "string"
          },
          "itemProdutoId": {
            "format": "int32",
            "type": "integer"
          },
          "tipoItemProduto": {
            "type": "object",
            "properties": {
              "id": {
                "format": "int32",
                "type": "integer"
              },
              "descricao": {
                "type": "string"
              }
            }
          },
          "tipoRelacaoSegurado": {
            "type": "string"
          },
          "dependenteItemProdutoId": {
            "format": "int32",
            "type": "integer"
          },
          "premio": {
            "format": "int32",
            "type": "integer"
          },
          "premioBase": {
            "format": "int32",
            "type": "integer"
          },
          "capital": {
            "format": "int32",
            "type": "integer"
          },
          "capitalBase": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ResultadoDaOperacaoRest_Produtor_": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Produtor"
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ResultadoDaOperacaoRest_IQueryable_Documento_": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Documento"
            }
          }
        }
      },
      "ResultadoDaOperacaoRest_IQueryable_Pendencia_": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pendencia"
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ResultadoDaOperacaoRest_Pendencia_": {
        "type": "object",
        "properties": {
          "Valor": {
            "$ref": "#/components/schemas/Pendencia"
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ResultadoDaOperacaoRest_IQueryable_PoliticaAceitacao_": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PoliticaAceitacao"
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ResultadoDaOperacaoRest_IQueryable_Produto_": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Produto"
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ResultadoDaOperacaoRest_Produto_": {
        "type": "object",
        "properties": {
          "Valor": {
            "$ref": "#/components/schemas/Produto"
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ResultadoDaOperacaoRest_IQueryable_Parceiro_": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parceiro"
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ResultadoDaOperacaoRest_IQueryable_Questionario_": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Questionario"
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "ResultadoDaOperacaoRest_ResultadoSimulacaoProposta_": {
        "type": "object",
        "properties": {
          "simulacoes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "proponente": {
                  "$ref": "#/components/schemas/SimulacaoProponente"
                },
                "periodicidadeCobrancaId": {
                  "format": "int32",
                  "type": "integer"
                },
                "prazoDecrescimo": {
                  "format": "int32",
                  "type": "integer"
                },
                "prazoPagamentoAntecipado": {
                  "format": "int32",
                  "type": "integer"
                },
                "idadePagamentoAntecipado": {
                  "format": "int32",
                  "type": "integer"
                },
                "prazoCerto": {
                  "format": "int32",
                  "type": "integer"
                },
                "prazoRenda": {
                  "format": "int32",
                  "type": "integer"
                },
                "ticketMinimo": {
                  "type": "number",
                  "format": "float"
                },
                "produtos": {
                  "type": "object",
                  "properties": {
                    "idProduto": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "descricao": {
                      "type": "string"
                    },
                    "descricaoComercial": {
                      "type": "string"
                    },
                    "coberturas": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SimulacaoCoberturaSeguradora"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ResultadoDaOperacaoRest_IQueryable_TimeLine_": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeLine"
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      },
      "Comissionamento": {
        "type": "object",
        "properties": {
          "numeroOpcao": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "Cargos": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "sigla": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "codigoExterno": {
            "type": "string"
          },
          "numeroContrato": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ModeloPropostaEmpresarialGlobal": {
        "type": "object",
        "properties": {
          "Valor": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cnpjParceiro": {
                  "type": "integer"
                },
                "codigoModeloProposta": {
                  "type": "string"
                },
                "numeroContrato": {
                  "type": "integer"
                },
                "numeroApolice": {
                  "type": "integer"
                },
                "dataInicioParceria": {
                  "type": "string",
                  "format": "date"
                },
                "classeGrupoSeguravel": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "sigla": {
                      "type": "string"
                    },
                    "descricao": {
                      "type": "string"
                    },
                    "ordem": {
                      "type": "integer"
                    },
                    "excluido": {
                      "type": "boolean"
                    }
                  }
                },
                "origemContrato": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "sigla": {
                      "type": "string"
                    },
                    "descricao": {
                      "type": "string"
                    },
                    "ordem": {
                      "type": "integer"
                    },
                    "excluido": {
                      "type": "boolean"
                    }
                  }
                },
                "gruposDeElegibilidade": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "atividadesEconomicas": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "descricao": {
                              "type": "string"
                            },
                            "sigla": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "descricao": {
                        "type": "string"
                      },
                      "grupoDeRisco": {
                        "type": "integer"
                      },
                      "modulos": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identificador": {
                              "type": "integer"
                            },
                            "descricao": {
                              "type": "string"
                            },
                            "numero": {
                              "type": "integer"
                            },
                            "coberturas": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "coberturaReferencia": {
                                    "type": "boolean"
                                  },
                                  "coberturaOpcional": {
                                    "type": "boolean"
                                  },
                                  "possuiCapitalIndependente": {
                                    "type": "boolean"
                                  },
                                  "dataInicioComercializacao": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "dataFimComercializacao": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "capitalMinimo": {
                                    "type": "integer"
                                  },
                                  "capitalMaximo": {
                                    "type": "integer"
                                  },
                                  "idadeMinima": {
                                    "type": "integer"
                                  },
                                  "idadeMaxima": {
                                    "type": "integer"
                                  },
                                  "limiteMinimo": {
                                    "type": "integer"
                                  },
                                  "limiteMaximo": {
                                    "type": "integer"
                                  },
                                  "nome": {
                                    "type": "string"
                                  },
                                  "sigla": {
                                    "type": "string"
                                  },
                                  "itemProdutoId": {
                                    "type": "integer"
                                  },
                                  "coberturaId": {
                                    "type": "integer"
                                  },
                                  "tipoItemProduto": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "sigla": {
                                        "type": "string"
                                      },
                                      "descricao": {
                                        "type": "string"
                                      },
                                      "ordem": {
                                        "type": "integer"
                                      },
                                      "excluido": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "tipoRelacaoSegurado": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "sigla": {
                                        "type": "string"
                                      },
                                      "descricao": {
                                        "type": "string"
                                      },
                                      "ordem": {
                                        "type": "integer"
                                      },
                                      "excluido": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "tipoGrupoItemProduto": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "sigla": {
                                        "type": "string"
                                      },
                                      "descricao": {
                                        "type": "string"
                                      },
                                      "ordem": {
                                        "type": "integer"
                                      },
                                      "excluido": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "dependenteItemProdutoId": {
                                    "type": "integer"
                                  },
                                  "valorServico": {
                                    "type": "integer"
                                  },
                                  "valorRepassadoAoCliente": {
                                    "type": "integer"
                                  },
                                  "taxaPremio": {
                                    "type": "integer"
                                  },
                                  "percentualCoberturaReferencia": {
                                    "type": "integer"
                                  },
                                  "tipoNaturezaServico": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "sigla": {
                                        "type": "string"
                                      },
                                      "descricao": {
                                        "type": "string"
                                      },
                                      "ordem": {
                                        "type": "integer"
                                      },
                                      "excluido": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "dependenciasItemProduto": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "itemProdutoDependenteId": {
                                          "type": "integer"
                                        },
                                        "tipoDependencia": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "integer"
                                            },
                                            "sigla": {
                                              "type": "string"
                                            },
                                            "descricao": {
                                              "type": "string"
                                            },
                                            "ordem": {
                                              "type": "integer"
                                            },
                                            "excluido": {
                                              "type": "boolean"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "limitesOperacionais": {
                              "required": [
                                "capitalMinimo",
                                "capitalMaximoPrimeiraFatura",
                                "capitalMaximoNovasInclusoes",
                                "capitalMaximoAlteracoes",
                                "capitalMaximoIndividual",
                                "idadeMaximaPrimeiraFatura",
                                "idadeMaximaAumentoCapital",
                                "idadeMaximaDemaisFaturas",
                                "idadeMinimaInclusao",
                                "qtdeSalariosMultiploSalarial",
                                "capitalUniforme",
                                "capitalSeguradoMinimo",
                                "capitalSeguradoMaximo"
                              ],
                              "properties": {
                                "capitalMinimo": {
                                  "type": "integer"
                                },
                                "capitalMaximoPrimeiraFatura": {
                                  "type": "integer"
                                },
                                "capitalMaximoNovasInclusoes": {
                                  "type": "integer"
                                },
                                "capitalMaximoAlteracoes": {
                                  "type": "integer"
                                },
                                "capitalMaximoIndividual": {
                                  "type": "integer"
                                },
                                "idadeMaximaPrimeiraFatura": {
                                  "type": "integer"
                                },
                                "idadeMaximaAumentoCapital": {
                                  "type": "integer"
                                },
                                "idadeMaximaDemaisFaturas": {
                                  "type": "integer"
                                },
                                "idadeMinimaInclusao": {
                                  "type": "integer"
                                },
                                "qtdeSalariosMultiploSalarial": {
                                  "type": "integer"
                                },
                                "capitalUniforme": {
                                  "type": "integer"
                                },
                                "capitalSeguradoMinimo": {
                                  "type": "integer"
                                },
                                "capitalSeguradoMaximo": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "cargosDisponiveis": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "sigla": {
                                    "type": "string"
                                  },
                                  "descricao": {
                                    "type": "string"
                                  },
                                  "codigoExterno": {
                                    "type": "string"
                                  },
                                  "numeroContrato": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "dataInicioVigencia": {
                              "type": "string",
                              "format": "date"
                            },
                            "dataFimVigencia": {
                              "type": "string",
                              "format": "date"
                            },
                            "limitesPorGrupoSegurado": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "tipoGrupoSegurado": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "sigla": {
                                        "type": "string"
                                      },
                                      "descricao": {
                                        "type": "string"
                                      },
                                      "ordem": {
                                        "type": "integer"
                                      },
                                      "excluido": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "limite": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "condicaoOperacional": {
                  "required": [
                    "dias",
                    "formasCobranca",
                    "periodicidades"
                  ],
                  "type": "object",
                  "properties": {
                    "dias": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "formasCobranca": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "sigla": {
                            "type": "string"
                          },
                          "descricao": {
                            "type": "string"
                          },
                          "ordem": {
                            "type": "integer"
                          },
                          "excluido": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "periodicidades": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "sigla": {
                            "type": "string"
                          },
                          "descricao": {
                            "type": "string"
                          },
                          "ordem": {
                            "type": "integer"
                          },
                          "excluido": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "Mensagens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HouveErrosDuranteProcessamento": {
            "type": "boolean"
          }
        }
      }
    }
  }
}